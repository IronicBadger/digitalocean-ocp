# This is an example of an OpenShift-Ansible host inventory

# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
infra_nodes
etcd
#lb
#nfs

# Full comments available below:
# https://github.com/openshift/openshift-ansible/blob/master/inventory/hosts.example
[OSEv3:vars]

### Ansible configuration
ansible_user={{ ansible_ssh_user }}
ansible_become={{ ansible_become }}
ansible_ssh_private_key_file={{ ssh_key }}
debug_level={{ debug_level }}

### Openshift deployment configuration
openshift_deployment_type={{ openshift_deployment_type }}
containerized={{ containerized }}
openshift_release={{ openshift_release }}

### General configuration
#openshift_image_tag={{ openshift_image_tag }}
#openshift_pkg_version={{ openshift_pkg_version }}
openshift_install_examples={{ openshift_install_examples }}
#openshift_master_image_policy_config={{ openshift_master_image_policy_config }}

### Configure master API rate limits for external clients
openshift_master_external_ratelimit_qps={{ openshift_master_external_ratelimit_qps }}
openshift_master_external_ratelimit_burst={{ openshift_master_external_ratelimit_burst }}
# Configure master API rate limits for loopback clients
#openshift_master_loopback_ratelimit_qps={{ openshift_master_loopback_ratelimit_qps }}
#openshift_master_loopback_ratelimit_burst={{ openshift_master_loopback_ratelimit_burst }}

### Docker Configuration
openshift_docker_additional_registries={{ openshift_docker_additional_registries }}
#openshift_docker_insecure_registries={{ openshift_docker_insecure_registries }}
#openshift_docker_blocked_registries={{ openshift_docker_blocked_registries }}
#openshift_docker_disable_push_dockerhub={{ openshift_docker_disable_push_dockerhub }}
openshift_docker_options={{ openshift_docker_options }}

### Auth
openshift_master_identity_providers={{ openshift_master_identity_providers }}

### Project Configuration
osm_project_request_message={{ osm_project_request_message }}
osm_project_request_template={{ osm_project_request_template }}
osm_mcs_allocator_range={{ osm_mcs_allocator_range }}
osm_mcs_labels_per_project={{ osm_mcs_labels_per_project }}
osm_uid_allocator_range={{ osm_uid_allocator_range }}

### Cockpit configuration
osm_use_cockpit={{ osm_use_cockpit }}
osm_cockpit_plugins={{ osm_cockpit_plugins}}

### HA method

openshift_master_cluster_hostname={{ openshift_master_cluster_hostname }}
openshift_master_cluster_public_hostname={{ openshift_master_cluster_public_hostname }}
openshift_master_default_subdomain={{ openshift_master_default_subdomain }}

### Override default node selector
#osm_default_node_selector={{ osm_default_node_selector }}

### Default storage plugin dependencies to install
#osn_storage_plugin_deps={{ osn_storage_plugin_deps }}

### Router Options

#openshift_hosted_router_selector={{ openshift_hosted_router_selector }}
#openshift_hosted_router_replicas={{ openshift_hosted_router_replicas }}
#openshift_hosted_router_force_subdomain={{ openshift_hosted_router_force_subdomain }}
#openshift_hosted_router_certificate={{ openshift_hosted_router_certificate }}
#openshift_hosted_manage_router={{ openshift_hosted_manage_router }}
#openshift_hosted_routers={{ openshift_hosted_routers }}

### Registry Options
#openshift_hosted_registry_selector={{ openshift_hosted_registry_selector }}
#openshift_hosted_registry_replicas={{ openshift_hosted_registry_replicas }}
#openshift_hosted_manage_registry={{ openshift_hosted_manage_registry }}

# Registry Storage Options
#
# NFS Host Group
# An NFS volume will be created with path "nfs_directory/volume_name"
# on the host within the [nfs] host group.  For example, the volume
# path using these options would be "/exports/registry".  "exports" is
# is the name of the export served by the nfs server.  "registry" is
# the name of a directory inside of "/exports".
#openshift_hosted_registry_storage_kind={{ openshift_hosted_registry_storage_kind }}
#openshift_hosted_registry_storage_access_modes={{ openshift_hosted_registry_storage_access_modes }}
# nfs_directory must conform to DNS-1123 subdomain must consist of lower case
# alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character
#openshift_hosted_registry_storage_nfs_directory={{ openshift_hosted_registry_storage_nfs_directory }}
#openshift_hosted_registry_storage_nfs_options={{ openshift_hosted_registry_storage_nfs_options }}
#openshift_hosted_registry_storage_volume_name={{ openshift_hosted_registry_storage_volume_name }}
#openshift_hosted_registry_storage_volume_size={{ openshift_hosted_registry_storage_volume_size }}
#
# External NFS Host
# NFS volume must already exist with path "nfs_directory/_volume_name" on
# the storage_host. For example, the remote volume path using these
# options would be "nfs.example.com:/exports/registry".  "exports" is
# is the name of the export served by the nfs server.  "registry" is
# the name of a directory inside of "/exports".
#openshift_hosted_registry_storage_kind={{ openshift_hosted_registry_storage_kind }}
#openshift_hosted_registry_storage_access_modes={{ openshift_hosted_registry_storage_access_modes }}
#openshift_hosted_registry_storage_host={{ openshift_hosted_registry_storage_host }}
# nfs_directory must conform to DNS-1123 subdomain must consist of lower case
# alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character
#openshift_hosted_registry_storage_nfs_directory={{ openshift_hosted_registry_storage_nfs_directory }}
#openshift_hosted_registry_storage_volume_name={{ openshift_hosted_registry_storage_volume_name }}
#openshift_hosted_registry_storage_volume_size={{ openshift_hosted_registry_storage_volume_size }}
#
# AWS S3
# S3 bucket must already exist.
#openshift_hosted_registry_storage_kind={{ openshift_hosted_registry_storage_kind }}
#openshift_hosted_registry_storage_provider={{ openshift_hosted_registry_storage_provider }}
#openshift_hosted_registry_storage_s3_encrypt={{ openshift_hosted_registry_storage_s3_encrypt }}
#openshift_hosted_registry_storage_s3_kmskeyid={{ openshift_hosted_registry_storage_s3_kmskeyid }}
#openshift_hosted_registry_storage_s3_accesskey={{ openshift_hosted_registry_storage_s3_accesskey }}
#openshift_hosted_registry_storage_s3_secretkey={{ openshift_hosted_registry_storage_s3_secretkey }}
#openshift_hosted_registry_storage_s3_bucket={{ openshift_hosted_registry_storage_s3_bucket }}
#openshift_hosted_registry_storage_s3_region={{ openshift_hosted_registry_storage_s3_region }}
#openshift_hosted_registry_storage_s3_chunksize={{ openshift_hosted_registry_storage_s3_chunksize }}
#openshift_hosted_registry_storage_s3_rootdirectory={{ openshift_hosted_registry_storage_s3_rootdirectory }}
#openshift_hosted_registry_pullthrough={{ openshift_hosted_registry_pullthrough }}
#openshift_hosted_registry_acceptschema2={{ openshift_hosted_registry_acceptschema2 }}
#openshift_hosted_registry_enforcequota={{ openshift_hosted_registry_enforcequota }}
#
# Any S3 service (Minio, ExoScale, ...): Basically the same as above
# but with regionendpoint configured
# S3 bucket must already exist.
#openshift_hosted_registry_storage_kind={{ openshift_hosted_registry_storage_kind }}
#openshift_hosted_registry_storage_provider={{ openshift_hosted_registry_storage_provider }}
#openshift_hosted_registry_storage_s3_accesskey={{ openshift_hosted_registry_storage_s3_accesskey }}
#openshift_hosted_registry_storage_s3_secretkey={{ openshift_hosted_registry_storage_s3_secretkey }}
#openshift_hosted_registry_storage_s3_regionendpoint=https://myendpoint.example.com/
#openshift_hosted_registry_storage_s3_bucket={{ openshift_hosted_registry_storage_s3_bucket }}
#openshift_hosted_registry_storage_s3_region={{ openshift_hosted_registry_storage_s3_region }}
#openshift_hosted_registry_storage_s3_chunksize={{ openshift_hosted_registry_storage_s3_chunksize }}
#openshift_hosted_registry_storage_s3_rootdirectory={{ openshift_hosted_registry_storage_s3_rootdirectory }}
#openshift_hosted_registry_pullthrough={{ openshift_hosted_registry_pullthrough }}
#openshift_hosted_registry_acceptschema2={{ openshift_hosted_registry_acceptschema2 }}
#openshift_hosted_registry_enforcequota={{ openshift_hosted_registry_enforcequota }}
#
# Metrics deployment
# See: https://docs.openshift.com/enterprise/latest/install_config/cluster_metrics.html
#
# By default metrics are not automatically deployed, set this to enable them
#openshift_metrics_install_metrics=true
#
# Storage Options
# If openshift_metrics_storage_kind is unset then metrics will be stored
# in an EmptyDir volume and will be deleted when the cassandra pod terminates.
# Storage options A & B currently support only one cassandra pod which is
# generally enough for up to 1000 pods. Additional volumes can be created
# manually after the fact and metrics scaled per the docs.
#
# Option A - NFS Host Group
# An NFS volume will be created with path "nfs_directory/volume_name"
# on the host within the [nfs] host group.  For example, the volume
# path using these options would be "/exports/metrics".  "exports" is
# is the name of the export served by the nfs server.  "metrics" is
# the name of a directory inside of "/exports".
#openshift_metrics_storage_kind={{ openshift_metrics_storage_kind }}
#openshift_metrics_storage_access_modes={{ openshift_metrics_storage_access_modes }}
#openshift_metrics_storage_nfs_directory={{ openshift_metrics_storage_nfs_directory }}
#openshift_metrics_storage_nfs_options={{ openshift_metrics_storage_nfs_options }}
#openshift_metrics_storage_volume_name={{ openshift_metrics_storage_volume_name }}
#openshift_metrics_storage_volume_size={{ openshift_metrics_storage_volume_size }}
#openshift_metrics_storage_labels= {{ openshift_metrics_storage_labels }}
#
# Option B - External NFS Host
# NFS volume must already exist with path "nfs_directory/_volume_name" on
# the storage_host. For example, the remote volume path using these
# options would be "nfs.example.com:/exports/metrics".  "exports" is
# is the name of the export served by the nfs server.  "metrics" is
# the name of a directory inside of "/exports".
#openshift_metrics_storage_kind={{ openshift_metrics_storage_kind }}
#openshift_metrics_storage_access_modes={{ openshift_metrics_storage_access_modes }}
#openshift_metrics_storage_host={{ openshift_metrics_storage_host }}
#openshift_metrics_storage_nfs_directory={{ openshift_metrics_storage_nfs_directory }}
#openshift_metrics_storage_volume_name={{ openshift_metrics_storage_volume_name }}
#openshift_metrics_storage_volume_size={{ openshift_metrics_storage_volume_size }}
#openshift_metrics_storage_labels={{ openshift_metrics_storage_labels }}
#
# Option C - Dynamic -- If openshift supports dynamic volume provisioning for
# your cloud platform use this. (enter dynamic as variable here)
#openshift_metrics_storage_kind={{ openshift_metrics_storage_kind }}
#
# Other Metrics Options -- Common items you may wish to reconfigure, for the complete
# list of options please see roles/openshift_metrics/README.md
#
# Override metricsPublicURL in the master config for cluster metrics
# Defaults to https://hawkular-metrics.{{openshift_master_default_subdomain}}/hawkular/metrics
# Currently, you may only alter the hostname portion of the url, alterting the
# `/hawkular/metrics` path will break installation of metrics.
#openshift_metrics_hawkular_hostname={{ openshift_metrics_hawkular_hostname }}
# Configure the prefix and version for the component images
#openshift_metrics_image_prefix={{ openshift_metrics_image_prefix }}
#openshift_metrics_image_version={{ openshift_metrics_image_version }}
# when openshift_deployment_type=='openshift-enterprise'
#openshift_metrics_image_prefix=registry.access.redhat.com/openshift3/
#openshift_metrics_image_version={{ openshift_metrics_image_version }}
#
# StorageClass
# openshift_storageclass_name={{ openshift_storageclass_name }}
# openshift_storageclass_parameters={{ openshift_storageclass_parameters }}
#

# Logging deployment
#
# Currently logging deployment is disabled by default, enable it by setting this
#openshift_logging_install_logging={{ openshift_logging_install_logging }}
#
# Logging storage config
# Option A - NFS Host Group
# An NFS volume will be created with path "nfs_directory/volume_name"
# on the host within the [nfs] host group.  For example, the volume
# path using these options would be "/exports/logging".  "exports" is
# is the name of the export served by the nfs server.  "logging" is
# the name of a directory inside of "/exports".
#openshift_logging_storage_kind={{ openshift_logging_storage_kind }}
#openshift_logging_storage_access_modes={{ openshift_logging_storage_access_modes }}
#openshift_logging_storage_nfs_directory={{ openshift_logging_storage_nfs_directory }}
#openshift_logging_storage_nfs_options={{ openshift_logging_storage_nfs_options }}
#openshift_logging_storage_volume_name={{ openshift_logging_storage_volume_name }}
#openshift_logging_storage_volume_size={{ openshift_logging_storage_volume_size }}
#openshift_logging_storage_labels={{ openshift_logging_storage_labels }}
#
# Option B - External NFS Host
# NFS volume must already exist with path "nfs_directory/_volume_name" on
# the storage_host. For example, the remote volume path using these
# options would be "nfs.example.com:/exports/logging".  "exports" is
# is the name of the export served by the nfs server.  "logging" is
# the name of a directory inside of "/exports".
#openshift_logging_storage_kind={{ openshift_logging_storage_kind }}
#openshift_logging_storage_access_modes={{ openshift_logging_storage_access_modes }}
#openshift_logging_storage_host={{ openshift_logging_storage_host }}
#openshift_logging_storage_nfs_directory={{ openshift_logging_storage_nfs_directory }}
#openshift_logging_storage_volume_name={{ openshift_logging_storage_volume_name }}
#openshift_logging_storage_volume_size={{ openshift_logging_storage_volume_size }}
#openshift_logging_storage_labels={{ openshift_logging_storage_labels }}
#
# Option C - Dynamic -- If openshift supports dynamic volume provisioning for
# your cloud platform use this.
#openshift_logging_storage_kind={{ openshift_logging_storage_kind }}
#
# Option D - none -- Logging will use emptydir volumes which are destroyed when
# pods are deleted
#
# Other Logging Options -- Common items you may wish to reconfigure, for the complete
# list of options please see roles/openshift_logging/README.md
#
# Configure loggingPublicURL in the master config for aggregate logging, defaults
# to kibana.{{ openshift_master_default_subdomain }}
#openshift_logging_kibana_hostname={{ openshift_logging_kibana_hostname }}
# Configure the number of elastic search nodes, unless you're using dynamic provisioning
# this value must be 1
#openshift_logging_es_cluster_size={{ openshift_logging_es_cluster_size }}
# Configure the prefix and version for the component images
#openshift_logging_image_prefix={{ openshift_logging_image_prefix }}
#openshift_logging_image_version={{ openshift_logging_image_version }}
# when openshift_deployment_type=='openshift-enterprise'
#openshift_logging_image_prefix=registry.access.redhat.com/openshift3/
#openshift_logging_image_version=3.7.0

# Prometheus deployment
#
# Currently prometheus deployment is disabled by default, enable it by setting this
#openshift_hosted_prometheus_deploy=true
#
# Prometheus storage config
# Option A - NFS Host Group
# An NFS volume will be created with path "nfs_directory/volume_name"
# on the host within the [nfs] host group.  For example, the volume
# path using these options would be "/exports/prometheus"
#openshift_prometheus_storage_kind={{ openshift_prometheus_storage_kind }}
#openshift_prometheus_storage_access_modes={{ openshift_prometheus_storage_access_modes }}
#openshift_prometheus_storage_nfs_directory={{ openshift_prometheus_storage_nfs_directory }}
#openshift_prometheus_storage_nfs_options={{ openshift_prometheus_storage_nfs_options }}
#openshift_prometheus_storage_volume_name={{ openshift_prometheus_storage_volume_name }}
#openshift_prometheus_storage_volume_size={{ openshift_prometheus_storage_volume_size }}
#openshift_prometheus_storage_labels={{ openshift_prometheus_storage_labels }}
#openshift_prometheus_storage_type={{ openshift_prometheus_storage_type }}
#openshift_prometheus_storage_class={{ openshift_prometheus_storage_class }}
# For prometheus-alertmanager
#openshift_prometheus_alertmanager_storage_kind={{ openshift_prometheus_alertmanager_storage_kind }}
#openshift_prometheus_alertmanager_storage_access_modes={{ openshift_prometheus_alertmanager_storage_access_modes }}
#openshift_prometheus_alertmanager_storage_nfs_directory={{ openshift_prometheus_alertmanager_storage_nfs_directory }}
#openshift_prometheus_alertmanager_storage_nfs_options={{ openshift_prometheus_alertmanager_storage_nfs_options }}
#openshift_prometheus_alertmanager_storage_volume_name={{ openshift_prometheus_alertmanager_storage_volume_name }}
#openshift_prometheus_alertmanager_storage_volume_size={{ openshift_prometheus_alertmanager_storage_volume_size }}
#openshift_prometheus_alertmanager_storage_labels={{ openshift_prometheus_alertmanager_storage_labels }}
#openshift_prometheus_alertmanager_storage_type={{ openshift_prometheus_alertmanager_storage_type }}
#openshift_prometheus_alertmanager_storage_class={{ openshift_prometheus_alertmanager_storage_class }}
# For prometheus-alertbuffer
#openshift_prometheus_alertbuffer_storage_kind={{ openshift_prometheus_alertbuffer_storage_kind }}
#openshift_prometheus_alertbuffer_storage_access_modes={{ openshift_prometheus_alertbuffer_storage_access_modes }}
#openshift_prometheus_alertbuffer_storage_nfs_directory={{ openshift_prometheus_alertbuffer_storage_nfs_directory }}
#openshift_prometheus_alertbuffer_storage_nfs_options={{ openshift_prometheus_alertbuffer_storage_nfs_options }}
#openshift_prometheus_alertbuffer_storage_volume_name={{ openshift_prometheus_alertbuffer_storage_volume_name }}
#openshift_prometheus_alertbuffer_storage_volume_size={{ openshift_prometheus_alertbuffer_storage_volume_size }}
#openshift_prometheus_alertbuffer_storage_labels={{ openshift_prometheus_alertbuffer_storage_labels }}
#openshift_prometheus_alertbuffer_storage_type={{ openshift_prometheus_alertbuffer_storage_type }}
#openshift_prometheus_alertbuffer_storage_class={{ openshift_prometheus_alertbuffer_storage_class }}
#
# Option B - External NFS Host
# NFS volume must already exist with path "nfs_directory/_volume_name" on
# the storage_host. For example, the remote volume path using these
# options would be "nfs.example.com:/exports/prometheus"
#openshift_prometheus_storage_kind={{ openshift_prometheus_storage_kind }}
#openshift_prometheus_storage_access_modes={{ openshift_prometheus_storage_access_modes }}
#openshift_prometheus_storage_host={{ openshift_prometheus_storage_host }}
#openshift_prometheus_storage_nfs_directory={{ openshift_prometheus_storage_nfs_directory }}
#openshift_prometheus_storage_volume_name={{ openshift_prometheus_storage_volume_name }}
#openshift_prometheus_storage_volume_size={{ openshift_prometheus_storage_volume_size }}
#openshift_prometheus_storage_labels={{ openshift_prometheus_storage_labels }}
#openshift_prometheus_storage_type={{ openshift_prometheus_storage_type }}
#openshift_prometheus_storage_class={{ openshift_prometheus_storage_class }}
# For prometheus-alertmanager
#openshift_prometheus_alertmanager_storage_kind={{ openshift_prometheus_alertmanager_storage_kind }}
#openshift_prometheus_alertmanager_storage_access_modes={{ openshift_prometheus_alertmanager_storage_access_modes }}
#openshift_prometheus_alertmanager_storage_host={{ openshift_prometheus_alertmanager_storage_host }}
#openshift_prometheus_alertmanager_storage_nfs_directory={{ openshift_prometheus_alertmanager_storage_nfs_directory }}
#openshift_prometheus_alertmanager_storage_volume_name={{ openshift_prometheus_alertmanager_storage_volume_name }}
#openshift_prometheus_alertmanager_storage_volume_size={{ openshift_prometheus_alertmanager_storage_volume_size }}
#openshift_prometheus_alertmanager_storage_labels={{ openshift_prometheus_alertmanager_storage_labels }}
#openshift_prometheus_alertmanager_storage_type={{ openshift_prometheus_alertmanager_storage_type }}
#openshift_prometheus_alertmanager_storage_class={{ openshift_prometheus_alertmanager_storage_class }}
# For prometheus-alertbuffer
#openshift_prometheus_alertbuffer_storage_kind={{ openshift_prometheus_alertbuffer_storage_kind }}
#openshift_prometheus_alertbuffer_storage_access_modes={{ openshift_prometheus_alertbuffer_storage_access_modes }}
#openshift_prometheus_alertbuffer_storage_host={{ openshift_prometheus_alertbuffer_storage_host }}
#openshift_prometheus_alertbuffer_storage_nfs_directory={{ openshift_prometheus_alertbuffer_storage_nfs_directory }}
#openshift_prometheus_alertbuffer_storage_volume_name={{ openshift_prometheus_alertbuffer_storage_volume_name }}
#openshift_prometheus_alertbuffer_storage_volume_size={{ openshift_prometheus_alertbuffer_storage_volume_size }}
#openshift_prometheus_alertbuffer_storage_labels={{ openshift_prometheus_alertbuffer_storage_labels }}
#openshift_prometheus_alertbuffer_storage_type={{ openshift_prometheus_alertbuffer_storage_type }}
#openshift_prometheus_alertbuffer_storage_class={{ openshift_prometheus_alertbuffer_storage_class }}
#
# Option C - none -- Prometheus, alertmanager and alertbuffer will use emptydir volumes
# which are destroyed when pods are deleted

# Configure the multi-tenant SDN plugin (default is 'redhat/openshift-ovs-subnet')
# other option is 'redhat/openshift-ovs-multitenant'
os_sdn_network_plugin_name={{ os_sdn_network_plugin_name }}
# openshift_use_openshift_sdn={{ openshift_use_openshift_sdn }}

### Master API and console ports.
openshift_master_api_port={{ openshift_master_api_port }}
openshift_master_console_port={{ openshift_master_console_port }}

### TLS certificates
#openshift_master_ca_certificate={'certfile': '/path/to/ca.crt', 'keyfile': '/path/to/ca.key'}
#openshift_master_overwrite_named_certificates={{ openshift_master_overwrite_named_certificates }}
#openshift_master_named_certificates={{ openshift_master_named_certificates }}

# Session options
openshift_master_session_name={{ openshift_master_session_name }}
openshift_master_session_max_seconds={{ openshift_master_session_max_seconds }}

# Configure dnsIP in the node config
#openshift_dns_ip={{ openshift_dns_ip }}

# Configure node kubelet arguments. pods-per-core is valid in OpenShift Origin 1.3 or OpenShift Container Platform 3.3 and later.
#openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['85'], 'image-gc-low-threshold': ['80']}

# Configure logrotate scripts
# See: https://github.com/nickhammond/ansible-logrotate
logrotate_scripts={{ logrotate_scripts }}

### Build configuration
openshift_builddefaults_resources_requests_cpu={{ openshift_builddefaults_resources_requests_cpu }}
openshift_builddefaults_resources_requests_memory={{ openshift_builddefaults_resources_requests_memory }}
openshift_builddefaults_resources_limits_cpu={{ openshift_builddefaults_resources_limits_cpu }}
openshift_builddefaults_resources_limits_memory={{ openshift_builddefaults_resources_limits_memory }}

# Enable service catalog
openshift_enable_service_catalog={{ openshift_enable_service_catalog }}

# Enable template service broker (requires service catalog to be enabled, above)
template_service_broker_install={{ template_service_broker_install }}

# Configure usage of openshift_clock role.
openshift_clock_enabled={{ openshift_clock_enabled }}

# OpenShift Per-Service Environment Variables
openshift_master_api_env_vars={{ openshift_master_api_env_vars }}
openshift_master_controllers_env_vars={{ openshift_master_controllers_env_vars }}
openshift_node_env_vars={{ openshift_node_env_vars }}

# Enable API service auditing
openshift_master_audit_config={{ openshift_master_audit_config }}

## Masters

[masters]
{% for item in groups['lab-master'] | sort %}
{{ item }} openshift_hostname={{ item }} openshift_dns_ip={{hostvars[item]['ansible_default_ipv4']['address']}}
{% endfor %}

[masters:vars]
openshift_node_labels={{ openshift_node_labels_master }}
openshift_schedulable={{ openshift_schedulable_master }}


## ETCD
[etcd]
{% for item in groups['lab-master'] | sort %}
{{ item }} openshift_hostname={{ item }} openshift_dns_ip={{hostvars[item]['ansible_default_ipv4']['address']}}
{% endfor %}

[etcd:vars]
openshift_node_labels={{ openshift_node_labels_etcd }}
openshift_schedulable={{ openshift_schedulable_etcd }}


## Infra nodes
[infra_nodes]
{% for item in groups['lab-master'] | sort %}
{{ item }} openshift_hostname={{ item }} openshift_dns_ip={{hostvars[item]['ansible_default_ipv4']['address']}}
{% endfor %}

[infra_nodes:vars]
openshift_node_labels={{ openshift_node_labels_infra }}


## App nodes
[app_nodes]
{% for item in groups['worker'] | sort %}
{{ item }} openshift_hostname={{ item }} openshift_dns_ip={{hostvars[item]['ansible_default_ipv4']['address']}}
{% endfor %}

[app_nodes:vars]
openshift_node_labels={{ openshift_node_labels_node }}

###################################################################################

# Nodes
[nodes:children]
infra_nodes
app_nodes
etcd
masters

[new_masters]


[new_nodes]
