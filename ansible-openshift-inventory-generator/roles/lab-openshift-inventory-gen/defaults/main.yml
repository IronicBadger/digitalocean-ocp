---
# default values for variables used by a typical openshift inventory

# Ansible settings
ansible_ssh_user: root
ssh_key: /opt/app-root/src/.ssh/id_rsa
ansible_python_interpreter: /usr/bin/python3
ansible_ssh_common_args: "'-o StrictHostKeyChecking=no'"
ansible_become: no
debug_level: 2

# Openshift version setup
openshift_deployment_type: origin
containerized: "True"
openshift_release: "v3.7"
openshift_image_tag: "latest"
openshift_pkg_version: "-3.7.0"

# System containers
openshift_use_system_containers: "False"
openshift_use_openvswitch_system_container: "False"
openshift_use_node_system_container: "False"
openshift_use_master_system_container: "False"
openshift_use_etcd_system_container: "False"

# Upstream image sources
system_images_registry: registry.access.redhat.com
openshift_docker_additional_registries: registry.access.redhat.com
openshift_install_examples: true
openshift_master_image_policy_config: "{\"maxImagesBulkImportedPerRepository\": 3, \"disableScheduledImport\": true}"

# Console customization
openshift_master_logout_url: http://example.com
openshift_master_extension_scripts: "['/path/to/script1.js','/path/to/script2.js']"
openshift_master_extension_stylesheets: "['/path/to/stylesheet1.css','/path/to/stylesheet2.css']"
openshift_master_extensions: "[{'name': 'images', 'sourceDirectory': '/path/to/my_images'}]"
openshift_master_oauth_templates: "login: /path/to/login-template.html"

# API rate limits
openshift_master_external_ratelimit_qps: 200
openshift_master_external_ratelimit_burst: 400
openshift_master_loopback_ratelimit_qps: 300
openshift_master_loopback_ratelimit_burst: 600

# Docker configuration
openshift_docker_additional_registries: "registry.example.com"
openshift_docker_insecure_registries: "registry.example.com"
openshift_docker_blocked_registries: "registry.hacker.com"
openshift_docker_disable_push_dockerhub: "True"
openshift_docker_use_system_container: "False"
openshift_use_crio: "False"
openshift_docker_options: "-l warn --log-opt max-size=50m --ipv6=false"
docker_version: "1.12.1"
openshift_docker_selinux_enabled: "False"
docker_upgrade: "False"

# etcd configuration
etcd_version: "3.1.0"
etcd_debug: "true"
etcd_log_package_levels: "etcdserver=WARNING,security=DEBUG"
osm_etcd_image: "rhel7/etcd"

# upgrade hooks
openshift_master_upgrade_pre_hook: "/usr/share/custom/pre_master.yml"
openshift_master_upgrade_hook: "/usr/share/custom/master.yml"
openshift_master_upgrade_post_hook: "/usr/share/custom/post_master.yml"

# own registry mirror configuration
oreg_url_master: "example.com/openshift3/ose-${component}:${version}"
oreg_url_node: "example.com/openshift3/ose-${component}:${version}"
oreg_url: "example.com/openshift3/ose-${component}:${version}"
openshift_examples_modify_imagestreams: "true"

# Openshift repository configuration
openshift_additional_repos: "[{'id': 'openshift-origin-copr', 'name': 'OpenShift Origin COPR', 'baseurl': 'https://copr-be.cloud.fedoraproject.org/results/maxamillion/origin-next/epel-7-$basearch/', 'enabled': 1, 'gpgcheck': 1, 'gpgkey': 'https://copr-be.cloud.fedoraproject.org/results/maxamillion/origin-next/pubkey.gpg'}]"
openshift_repos_enable_testing: "false"

# Authentication configuration
# https://docs.openshift.com/container-platform/3.5/install_config/configuring_authentication.html#HTPasswdPasswordIdentityProvider
openshift_master_identity_providers: "[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]"
openshift_master_htpasswd_users: "{'admin': '$apr1$XgwctlQt$0iPzIbRdhXZorCYjKvsLv/', 'user': '$apr1$7CNkYetG$QXz3XH9pAKLSp73pUZd2R1'}"
openshift_master_htpasswd_file: "/path/to/local/file"
openshift_master_identity_providers: "[{'name': 'allow_all', 'login': 'true', 'challenge': 'true', 'kind': 'AllowAllPasswordIdentityProvider'}]"

# Cloud provider configuration
# There are a lot of variables, add the ones you need...

# Project configuration
osm_project_request_message: "''"
osm_project_request_template: "''"
osm_mcs_allocator_range: "'s0:/2'"
osm_mcs_labels_per_project: 5
osm_uid_allocator_range: "'1000000000-1999999999/10000'"
openshift_additional_projects: "{'my-project': {'default_node_selector': 'label=value'}}"

# Cockpit configuration
osm_use_cockpit: "true"
osm_cockpit_plugins: "['cockpit-kubernetes']"

# Cluster hostname configuration
openshift_master_cluster_hostname: "ocp.ktz.cloud"
openshift_master_cluster_public_hostname: "ocp.ktz.cloud"
openshift_master_default_subdomain: "apps.ktz.cloud"

# Misc
osm_controller_args: "{'resource-quota-sync-period': ['10s']}"
osm_api_server_args: "{'max-requests-inflight': ['400']}"
osm_custom_cors_origins: "['foo.example.com', 'bar.example.com']"
osm_default_node_selector: "'region=primary'"
openshift_master_pod_eviction_timeout: "5m"
openshift_master_access_token_max_seconds: 86400
openshift_master_auth_token_max_seconds: 500
openshift_master_max_requests_inflight: 500
osn_storage_plugin_deps: "['ceph','glusterfs','iscsi']"

# router configuration
openshift_hosted_router_selector: "'region=infra'"
openshift_hosted_router_replicas: 2
openshift_hosted_router_force_subdomain: "'${name}-${namespace}.apps.example.com'"
openshift_hosted_router_certificate: "{\"certfile\": \"/path/to/router.crt\", \"keyfile\": \"/path/to/router.key\", \"cafile\": \"/path/to/router-ca.crt\"}"
openshift_hosted_manage_router: "true"
openshift_hosted_routers: "[{'name': 'router1', 'certificate': {'certfile': '/path/to/certificate/abc.crt', 'keyfile': '/path/to/certificate/abc.key', 'cafile': '/path/to/certificate/ca.crt'}, 'replicas': 1, 'serviceaccount': 'router', 'namespace': 'default', 'stats_port': 1936, 'edits': [], 'images': 'openshift3/ose-${component}:${version}', 'selector': 'type=router1', 'ports': ['80:80', '443:443']}, {'name': 'router2', 'certificate': {'certfile': '/path/to/certificate/xyz.crt', 'keyfile': '/path/to/certificate/xyz.key', 'cafile': '/path/to/certificate/ca.crt'}, 'replicas': 1, 'serviceaccount': 'router', 'namespace': 'default', 'stats_port': 1936, 'edits': [{'action': 'append', 'key': 'spec.template.spec.containers[0].env', 'value': {'name': 'ROUTE_LABELS', 'value': 'route=external'}}], 'images': 'openshift3/ose-${component}:${version}', 'selector': 'type=router2', 'ports': ['80:80', '443:443']}]"

# registry console configuration
openshift_cockpit_deployer_prefix: "registry.example.com/myrepo/"
openshift_cockpit_deployer_basename: "my-console"
openshift_cockpit_deployer_version: "1.4.1"

# registry configuration
openshift_hosted_registry_selector: "'region=infra'"
openshift_hosted_registry_replicas: 2
openshift_hosted_registry_cert_expire_days: 730
openshift_hosted_manage_registry: "true"

# registry storage options
# options: nfs, object, openstack
openshift_hosted_registry_storage_kind: "nfs"

# registry nfs specific options
openshift_hosted_registry_storage_access_modes: "['ReadWriteMany']"
openshift_hosted_registry_storage_volume_name: "registry"
openshift_hosted_registry_storage_volume_size: "10Gi"
openshift_hosted_registry_storage_nfs_directory: "/exports"
openshift_hosted_registry_storage_nfs_options: "'*(rw,root_squash)'"
# registry 'external' specific nfs host option
openshift_hosted_registry_storage_host: nfs.example.com

# registry AWS S3 options
openshift_hosted_registry_storage_provider: s3
openshift_hosted_registry_storage_s3_encrypt: false
openshift_hosted_registry_storage_s3_kmskeyid: aws_kms_key_id
openshift_hosted_registry_storage_s3_accesskey: aws_access_key_id
openshift_hosted_registry_storage_s3_secretkey: aws_secret_access_key
openshift_hosted_registry_storage_s3_bucket: bucket_name
openshift_hosted_registry_storage_s3_region: bucket_region
openshift_hosted_registry_storage_s3_chunksize: 26214400
openshift_hosted_registry_storage_s3_rootdirectory: "/registry"
openshift_hosted_registry_pullthrough: true
openshift_hosted_registry_acceptschema2: true
openshift_hosted_registry_enforcequota: true
# generic s3 service options
openshift_hosted_registry_storage_s3_regionendpoint: "https://myendpoint.example.com"
# s3 cloudfront options
openshift_hosted_registry_storage_s3_cloudfront_baseurl: "https://myendpoint.cloudfront.net/"
openshift_hosted_registry_storage_s3_cloudfront_privatekeyfile: "/full/path/to/secret.pem"
openshift_hosted_registry_storage_s3_cloudfront_keypairid: "yourpairid"

# metrics storage configuration
openshift_metrics_install_metrics: "true"
# available options: nfs, dynamic
openshift_metrics_storage_kind: "nfs"

# metrics nfs specific options
openshift_metrics_storage_access_modes: "['ReadWriteOnce']"
openshift_metrics_storage_nfs_directory: "/exports"
openshift_metrics_storage_nfs_options: "'*(rw,root_squash)'"
openshift_metrics_storage_volume_name: "metrics"
openshift_metrics_storage_volume_size: "10Gi"
openshift_metrics_storage_labels: "{'storage': 'metrics'}"
# external nfs host specific option
openshift_metrics_storage_host: "nfs.example.com"

# metrics configuration
openshift_metrics_hawkular_hostname: "hawkular-metrics.example.com"
openshift_metrics_image_prefix: "docker.io/openshift/origin-"
openshift_metrics_image_version: "v3.7"

# storage class configuration
openshift_storageclass_name: "gp2"
openshift_storageclass_parameters: "{'type': 'gp2', 'encrypted': 'false'}"

# logging configuration
openshift_logging_install_logging: "true"
# available options: nfs, dynamic
openshift_logging_storage_kind: "nfs"

# logging nfs specific options
openshift_logging_storage_access_modes: "['ReadWriteOnce']"
openshift_logging_storage_nfs_directory: "/exports"
openshift_logging_storage_nfs_options: "'*(rw,root_squash)'"
openshift_logging_storage_volume_name: "logging"
openshift_logging_storage_volume_size: "10Gi"
openshift_logging_storage_labels: "{'storage': 'logging'}"
# external nfs host specific option
openshift_logging_storage_host: "nfs.example.com"

# other logging configuration
openshift_logging_kibana_hostname: "logging.apps.example.com"
openshift_logging_es_cluster_size: 1
openshift_logging_image_prefix: "docker.io/openshift/origin-"
openshift_logging_image_version: "v3.7"

# prometheus deployment
openshift_hosted_prometheus_deploy: "true"

# NFS host group configuration
openshift_prometheus_storage_kind: nfs
openshift_prometheus_storage_access_modes: "['ReadWriteOnce']"
openshift_prometheus_storage_nfs_directory: "/exports"
openshift_prometheus_storage_nfs_options: "'*(rw,root_squash)'"
openshift_prometheus_storage_volume_name: prometheus
openshift_prometheus_storage_volume_size: 10Gi
openshift_prometheus_storage_labels: "{'storage': 'prometheus'}"
openshift_prometheus_storage_type: "'pvc'"
openshift_prometheus_storage_class: "glusterfs-storage"
# For prometheus-alertmanager
openshift_prometheus_alertmanager_storage_kind: nfs
openshift_prometheus_alertmanager_storage_access_modes: "['ReadWriteOnce']"
openshift_prometheus_alertmanager_storage_nfs_directory: "/exports"
openshift_prometheus_alertmanager_storage_nfs_options: "'*(rw,root_squash)'"
openshift_prometheus_alertmanager_storage_volume_name: prometheus-alertmanager
openshift_prometheus_alertmanager_storage_volume_size: 10Gi
openshift_prometheus_alertmanager_storage_labels: "{'storage': 'prometheus-alertmanager'}"
openshift_prometheus_alertmanager_storage_type: "'pvc'"
openshift_prometheus_alertmanager_storage_class: "glusterfs-storage"
# For prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_kind: nfs
openshift_prometheus_alertbuffer_storage_access_modes: "['ReadWriteOnce']"
openshift_prometheus_alertbuffer_storage_nfs_directory: "/exports"
openshift_prometheus_alertbuffer_storage_nfs_options: "'*(rw,root_squash)'"
openshift_prometheus_alertbuffer_storage_volume_name: prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_volume_size: 10Gi
openshift_prometheus_alertbuffer_storage_labels: "{'storage': 'prometheus-alertbuffer'}"
openshift_prometheus_alertbuffer_storage_type: "'pvc'"
openshift_prometheus_alertbuffer_storage_class: glusterfs-storage
# external nfs host specific configuration
openshift_prometheus_storage_host: "nfs.example.com"
openshift_prometheus_alertmanager_storage_host: "nfs.example.com"
openshift_prometheus_alertbuffer_storage_host: "nfs.example.com"

# SDN configuration
os_sdn_network_plugin_name: "'redhat/openshift-ovs-multitenant'"
openshift_use_openshift_sdn: False
osm_cluster_network_cidr: 10.128.0.0/14
openshift_portal_net: 172.30.0.0/16
openshift_master_external_ip_network_cidrs: "['0.0.0.0/0']"
openshift_master_ingress_ip_network_cidr: 172.46.0.0/16

# openshift API and console configuration
openshift_master_api_port: 443
openshift_master_console_port: 443

# TLS certificate configuration
openshift_master_ca_certificate: "{'certfile': '/path/to/ca.crt', 'keyfile': '/path/to/ca.key'}"
openshift_master_overwrite_named_certificates: true
openshift_master_named_certificates: "[{\"certfile\": \"/path/to/custom1.crt\", \"keyfile\": \"/path/to/custom1.key\", \"cafile\": \"/path/to/custom-ca1.crt\"}]"

# session options
openshift_master_session_name: ssn
openshift_master_session_max_seconds: 3600

# authentication and encryption secret options
openshift_master_session_auth_secrets: "['DONT+USE+THIS+SECRET+b4NV+pmZNSO']"
openshift_master_session_encryption_secrets: "['DONT+USE+THIS+SECRET+b4NV+pmZNSO']"

# misc
openshift_node_iptables_sync_period: "5s"
openshift_set_node_ip: True
openshift_dns_ip: 172.30.0.1
openshift_node_kubelet_args: "{'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['85'], 'image-gc-low-threshold': ['80']}"
logrotate_scripts: "[{\"name\": \"syslog\", \"path\": \"/var/log/cron\\n/var/log/maillog\\n/var/log/messages\\n/var/log/secure\\n/var/log/spooler\\n\", \"options\": [\"daily\", \"rotate 7\", \"compress\", \"sharedscripts\", \"missingok\"], \"scripts\": {\"postrotate\": \"/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true\"}}]"

openshift_hostname_check: true
openshift_use_dnsmasq: False
openshift_node_dnsmasq_additional_config_file: "/path/to/ose-dnsmasq.conf"

# proxy configuration
openshift_http_proxy: "http://USER:PASSWORD@IPADDR:PORT"
openshift_https_proxy: "https://USER:PASSWORD@IPADDR:PORT"
openshift_no_proxy: "'.hosts.example.com,some-host.com'"
openshift_generate_no_proxy_hosts: True

# build default configurations
openshift_builddefaults_resources_requests_cpu: 100m
openshift_builddefaults_resources_requests_memory: 256Mi
openshift_builddefaults_resources_limits_cpu: 1000m
openshift_builddefaults_resources_limits_memory: 512Mi

# build override configurations
openshift_buildoverrides_force_pull: true

# service cata log + service broker configuration
openshift_enable_service_catalog: true
template_service_broker_install: true
openshift_service_catalog_image_prefix: "docker.io/openshift/origin-"
openshift_service_catalog_image_version: "v3.7"
template_service_broker_version: "v3.7"
openshift_template_service_broker_namespaces: ['openshift']

# openshift clock
openshift_clock_enabled: true

# openshif per-service environment variables
openshift_master_api_env_vars: "{\"ENABLE_HTTP2\": \"true\"}"
openshift_master_controllers_env_vars: "{\"ENABLE_HTTP2\": \"true\"}"
openshift_node_env_vars: "{\"ENABLE_HTTP2\": \"true\"}"

# api service auditing
openshift_master_audit_config: "{\"enabled\": true, \"auditFilePath\": \"/var/log/audit-ocp.log\", \"maximumFileRetentionDays\": 10, \"maximumFileSizeMegabytes\": 10, \"maximumRetainedFiles\": 10}"

# origin repos
openshift_enable_origin_repo: false

# 
openshift_node_labels_master: "{'purpose': 'master', 'region': 'primary', 'router': 'true'}"
openshift_node_labels_etcd: "{'purpose': 'etcd', 'region': 'primary'}"
openshift_node_labels_infra: "{'purpose': 'infra', 'region': 'primary'}"
openshift_node_labels_node: "{'purpose': 'work', 'region': 'primary'}"
openshift_schedulable_master: "false"
openshift_schedulable_etcd: "false"
...
